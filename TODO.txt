

- Log timestamps need milliseconds
- prevent infinite running when pipeline name cannot be found (e.g. comment out my_pipeline_1)



TODO
- logging using zap
- work out how to change the topic name to match our format / etc, I think it's related to the cqrs.JSONMarshaller.Name[FromMessage]
- how are events logged into a stream (in order)? can we do middleware or something for that?

NOTES
- Should we capture / load the pipeline definition at the start of the run? What happens if it changes on the way through? We should at least capture the version and then abort if changed?

DECISIONS
- Pipeline definitions and code are not stored in event history, they are referenced
- So, pipeline definitions and code can be updated and will change running pipelines
- But, a pipeline run can choose to pin its version, causing it to abort if an update is completed
- Or, upgrades can choose to pause affected pipeline runs ... queue new runs > finish existing runs > upgrade > restart new runs





COMMANDS

pipeline.run.queue
pipeline.run.load
pipeline.run.start
pipeline.run.cancel
pipeline.run.finish
pipeline.run.fail



EVENTS

pipeline.run.queued
pipeline.run.loaded
pipeline.run.started
pipeline.run.canceled
pipeline.run.finished
pipeline.run.failed







Events

pipeline.scheduled

pipeline.started

step.http_request.started
step.http_request.finished
step.http_request.failed

pipeline.canceled
pipeline.finished
pipeline.failed


Commands

pipeline.schedule
pipeline.start

step.http_request.start
step.http_request.finish
step.http_request.fail

pipeline.cancel
pipeline.finish
pipeline.fail






Event log
- history of commands and their outputs

Snapshot
- current state of the pipeline, can be rebuilt anytime from the event log
